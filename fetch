#!/bin/bash

URL="https://github.com/pyavitz/rpi-img-builder/releases/download/linux/"
RED="\e[1;31m"
SRED="\e[0;31m"
SGRN="\e[0;32m"
SYLW="\e[0;33m"
FIN="\e[0m"

###
list(){
version=$(curl --silent -L ${URL}version)
echo $version
}

update(){
sudo mv -f /usr/local/bin/fetch /usr/local/bin/fetch.orig
sudo wget -cq --show-progress https://raw.githubusercontent.com/pyavitz/scripts/master/fetch -P /usr/local/bin
sudo chmod +x /usr/local/bin/fetch
if ls /usr/local/bin/fetch > /dev/null 2>&1;
   then sudo rm -f /usr/local/bin/fetch.orig ;
   else sudo mv -f /usr/local/bin/fetch.orig /usr/local/bin/fetch
fi
fetch -h
}

### 
rpi-5.4.y(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi-5.4.y${FIN} ..."
wget -cq --show-progress ${URL}rpi-5.4.y.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi-5.4.y.tar.xz
rm -f rpi-5.4.y.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi-5.4.y
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

rpi3-5.4.y(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi3-5.4.y${FIN} ..."
wget -cq --show-progress ${URL}rpi3-5.4.y.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi3-5.4.y.tar.xz
rm -f rpi3-5.4.y.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi3-5.4.y
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

rpi4-5.4.y(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi4-5.4.y${FIN} ..."
wget -cq --show-progress ${URL}rpi4-5.4.y.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi4-5.4.y.tar.xz
rm -f rpi4-5.4.y.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi4-5.4.y
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

###
rpi-stable(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi-stable${FIN} ..."
wget -cq --show-progress ${URL}rpi-stable.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi-stable.tar.xz
rm -f rpi-stable.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi-stable
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

rpi3-stable(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi3-stable${FIN} ..."
wget -cq --show-progress ${URL}rpi3-stable.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi3-stable.tar.xz
rm -f rpi3-stable.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi3-stable
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

rpi4-stable(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi4-stable${FIN} ..."
wget -cq --show-progress ${URL}rpi4-stable.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi4-stable.tar.xz
rm -f rpi4-stable.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi4-stable
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

###
rpi4-mainline(){
mkdir -p ~/.build
cd ~/.build
echo -e "${RED}Fetching rpi4-mainline${FIN} ..."
wget -cq --show-progress ${URL}rpi4-mainline.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Extracting archive${FIN} ..."
tar xf rpi4-mainline.tar.xz
rm -f rpi4-mainline.tar.xz
echo -e "${RED}Done${FIN}."
echo
echo -e "${RED}Starting install${FIN} ..."
cd rpi4-mainline
sudo dpkg -i *.deb
cd ~
echo -e "${RED}Done${FIN}."
sudo rm -fdr ~/.build/*
}

###
bcm2708_setup(){
echo -e "${RED}bcm2708 found${FIN}! Adding needed file."
sudo rm -f /etc/opt/soc.txt
sudo mkdir -p /etc/opt
sudo sh -c 'echo "bcm2708" > /etc/opt/soc.txt'
echo -e "${RED}Done${FIN}. Restarting fetch."
sleep 2s
clear
fetch -u
}

bcm2710_setup(){
echo -e "${RED}bcm2710 found${FIN}! Adding needed file."
sudo rm -f /etc/opt/soc.txt
sudo mkdir -p /etc/opt
sudo sh -c 'echo "bcm2710" > /etc/opt/soc.txt'
echo -e "${RED}Done${FIN}. Restarting fetch."
sleep 2s
clear
fetch -u
}

bcm2711_setup(){
echo -e "${RED}bcm2711 found${FIN}! Adding needed file."
sudo rm -f /etc/opt/soc.txt
sudo mkdir -p /etc/opt
sudo sh -c 'echo "bcm2711" > /etc/opt/soc.txt'
echo -e "${RED}Done${FIN}. Restarting fetch."
sleep 2s
clear
fetch -u
}

if [ $# -eq 0 ]
then
        echo -e "\e[0;31mMissing options!${FIN}"
        echo "(run $0 -h for help)"
        echo ""
        exit 0
fi

ECHO="false"

while getopts "123hrus" OPTION; do
        case $OPTION in

                1)
                        ECHO="5.4"
                        ;;
                2)
                        ECHO="stable"
                        ;;
                3)
                        ECHO="mainline"
                        ;;
                r)
                        ECHO="rev"
                        ;;
                u)
                        ECHO="up"
                        ;;
                s)
                        ECHO="setup"
                        ;;

                h)                       
                        echo -e "${RED}Fetch, Linux kernel installer for the Raspberry Pi Image Builder${FIN}"
                        echo "https://github.com/pyavitz/rpi-img-builder"
                        echo "Usage: fetch -opt"
                        echo ""
                        list
                        echo ""
                        echo -e "   -1        Linux 5.4.y LTS"
                        echo -e "   -2        Linux Stable Branch"
                        echo -e "   -3        Linux Mainline Branch ${SYLW}(use at own risk!)${FIN}"
                        echo -e "   -u        Update Fetch"
                        echo -e "   -s        Not working? Setup Fetch"
                        echo ""
                        echo "Should you come across any bugs, either open an issue on GitHub or talk"
                        echo "with us directly by joining our channel on Freenode; #debianarm-port"
                        exit 0
                        ;;

        esac
done

if [ $ECHO = "5.4" ]
then
        echo
	if `grep -Fx "bcm2708" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi-5.4.y;
        fi

	if `grep -Fx "bcm2710" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi3-5.4.y;
        fi

	if `grep -Fx "bcm2711" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi4-5.4.y;
        fi
fi

if [ $ECHO = "stable" ]
then
        echo
	if `grep -Fx "bcm2708" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi-stable;
        fi

	if `grep -Fx "bcm2710" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi3-stable;
        fi

	if `grep -Fx "bcm2711" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi4-stable;
        fi
fi

if [ $ECHO = "mainline" ]
then
        echo
	if `grep -Fx "bcm2711" "/etc/opt/soc.txt" > /dev/null 2>&1;`
		then rpi4-mainline;
		else echo -e "${RED}OOPS!${FIN} Your board is not supported."
	fi
fi

if [ $ECHO = "setup" ]
then
        echo
	if ls /boot/{bcm2708-rpi-zero.dtb,bcm2708-rpi-zero-w.dtb} > /dev/null 2>&1
		then bcm2708_setup;
	fi

	if ls /boot/{bcm2710-rpi-3-b-plus.dtb,bcm2710-rpi-3-b.dtb} > /dev/null 2>&1
		then bcm2710_setup;
	fi

	if ls /boot/bcm2711-rpi-4-b.dtb > /dev/null 2>&1
		then bcm2711_setup;
	fi
fi

if [ $ECHO = "rev" ]
then
        list;
fi

if [ $ECHO = "up" ]
then
        update;
fi
